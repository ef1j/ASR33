#!/bin/bash

# moon pix
# - ASCII moon with overstrike
# - pictures and data from https://aa.usno.navy.mil/data/docs/api.php#diskmap
# - also considered using NASA SVS, https://svs.gsfc.nasa.gov/4442, but
#   the Navy API has wider calendar coverage, and brighter earth-shine.

# 10 characters per inch, 6 characters per line
# default to small
width=40
height=24
indent=14
if [[ "$1" == "-big" ]]; then
    # large
    width=65
    height=39
    indent=3
    shift
fi

showtime=1
moondate=$1
if [[ "$moondate" ]]; then
    showtime=0
    shift
else
    moondate=$(date -u "+%m/%d/%Y")
fi
moontime=$1
if [[ "$moontime" ]]; then
    showtime=1
    shift
else
    moontime=$(date -u "+%H:%M")
fi

chars1="'.#"
chars2="-/MO0@N\\"

url="https://api.usno.navy.mil/imagery/moon.png?ID=asr33&date=$moondate&time=$moontime"
data="https://api.usno.navy.mil/rstt/oneday?ID=asr33&date=$moondate&loc=Lynn,MA"
phase=$(curl -s "$data" | jq -r "if .curphase == null then .closestphase.phase  else .curphase end")
gamma="1.5"

if [[ $showtime == 1 ]]; then
    title="$moondate $moontime, $phase"
else
    title="$moondate, $phase"
fi

tmp1=$(mktemp -t XXXXXX.png)
tmp2=$(mktemp -t XXXXXX.png)
function cleanup() {
    rm $tmp1
    rm $tmp2
}
trap cleanup EXIT

if [[ $? == 0 ]]; then
    # lasso the moon as a png
    wget -q -O "$tmp1" "$url"
    if [[ $? == 0 && -s "$tmp1" ]]; then
        # the 1024x1024 has lots of space around it, trim
        convert "$tmp1" -crop 768x768+128+128 "$tmp2"

        # convert to ascii
        $(dirname $0)/../asciiart/code/image2.py --width $width "$tmp2" --gamma "$gamma" --chars1 "$chars1" --chars2 "$chars2" --title "$title" --indent $indent --output -
    else
        echo "error" >&2
    fi
fi
