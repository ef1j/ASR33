#!/usr/bin/env python3

"""
tread: read raw 8-bit input from Teletype paper-tape to file
"""
import io
import sys
import tty
import termios
import click


# Escape sequence to initialize (turn off wordwrap, NLCR, delays)
# (Usually a teletype wouldn't have firmware that handles escape sequences, but mine does, for this purpose)
# (https://github.com/hughpyle/ASR33/tree/master/firmware)
INIT = b"\033[?7l\033_ab\234"
RESET = b"\033[!p"


def tread(fd, length, leader):
    """
    Read 'length' bytes from the file, adding 'leader' nulls at the start
    :param fd: binary file to write
    :param length: total (leader plus data bytes read)
    :param leader: null bytes to start the file
    :return:
    """
    # Read and skip any nulls
    b = b'\0'
    while b == b'\0':
        b = sys.stdin.buffer.read(1)

    # Write the leader
    for i in range(leader):
        fd.write(b'\0')

    # Read the rest of the input, and write to the file
    fd.write(b)
    for i in range(length - leader - 1):
        b = sys.stdin.buffer.read(1)
        fd.write(b)


@click.command()
@click.argument("length", type=int)
@click.argument("outfile", type=click.Path())
@click.option("--leader", type=int, default=0, help="Number of leading nulls to retain (normally stripped)")
def main(length, outfile, leader):
    """
    Read raw paper-tape tty input to a file.

    Input is read from stdin, as a raw stream of bytes.
    Leading nulls are stripped from the input, and then
    data is sent to the output file, optionally preceded
    by a fixed number of leading nulls.

    Reading stops when LENGTH characters have been read
    (not including the leading nulls).
    """
    fd = sys.stdin.fileno()
    tc = None
    if sys.stdin.isatty():
        tc = termios.tcgetattr(fd)
        tty.setraw(fd)

    if sys.stdout.isatty():
        sys.stdout.buffer.write(INIT)

    try:
        if outfile == "-":
            tread(sys.stdout.buffer, length, leader)
        else:
            with io.open(outfile, "wb") as f:
                tread(f, length, leader)
    finally:
        if sys.stdout.isatty():
            sys.stdout.buffer.write(RESET)
        if sys.stdin.isatty():
            termios.tcsetattr(fd, termios.TCSADRAIN, tc)


if __name__ == "__main__":
    main()
